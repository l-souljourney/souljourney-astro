# 腾讯云 CNB (Cloud Native Builder) 构建配置文件
# L-Souljourney 博客简化部署配置

# 主分支 - 生产部署
main:
  push:
    - name: astro-blog-deploy
      image: node:18
      # 从密钥仓库导入敏感环境变量
      # imports: https://cnb.cool/l-souljourney/env/-/blob/main/env.yml
      env:
        NODE_ENV: production
        ASTRO_TELEMETRY_DISABLED: "1"
        TZ: Asia/Shanghai
        # 腾讯云COS配置
        COS_BUCKET: "souljourney-1251969283"
        COS_REGION: "ap-shanghai"
      
      script: |
        echo "🚀 开始构建 L-Souljourney 博客..."
        
        # 环境信息
        echo "📋 环境信息:"
        node --version
        npm --version
        
        # 安装 pnpm
        echo "📦 安装 pnpm 包管理器..."
        npm install -g pnpm@latest
        pnpm --version
        
        # 安装依赖
        echo "📚 安装项目依赖..."
        pnpm install --frozen-lockfile
        
        # 构建项目
        echo "🔨 构建 Astro 项目..."
        pnpm build
        
        # 显示构建结果
        echo "📊 构建产物信息:"
        ls -la dist/
        du -sh dist/
        find dist -type f | wc -l | xargs echo "文件数量:"
        
        # 检查COS环境变量
        if [ -n "$COS_SECRET_ID" ] && [ -n "$COS_SECRET_KEY" ]; then
          echo "🔧 检测到COS配置，准备上传..."
          
          # 安装 Python 和 coscmd 工具
          apt-get update && apt-get install -y python3 python3-pip
          pip3 install coscmd
          
          # 配置 coscmd
          coscmd config -a $COS_SECRET_ID -s $COS_SECRET_KEY -b $COS_BUCKET -r $COS_REGION
          
          # 上传构建产物到COS
          echo "📤 上传文件到腾讯云COS..."
          coscmd upload -r -s --delete ./dist/ /
          
          echo "✅ 博客部署完成！"
          echo "🌐 访问地址: https://blog.l-souljourney.cn"
        else
          echo "⚠️  未配置COS环境变量，跳过上传步骤"
          echo "💡 请在CNB项目设置中配置 COS_SECRET_ID 和 COS_SECRET_KEY 环境变量"
        fi

# 开发分支 - 仅构建测试
develop:
  push:
    - name: astro-blog-test
      image: node:18
      env:
        NODE_ENV: development
        ASTRO_TELEMETRY_DISABLED: "1"
      
      script: |
        echo "🧪 开发分支构建测试..."
        
        # 安装依赖并构建
        npm install -g pnpm@latest
        pnpm install --frozen-lockfile
        pnpm build
        
        echo "✅ 开发构建测试完成！"

# Pull Request - 代码检查
"**":
  pull_request:
    - name: pr-check
      image: node:18
      script: |
        echo "🔍 PR 构建检查..."
        npm install -g pnpm@latest
        pnpm install --frozen-lockfile
        pnpm build
        echo "✅ PR 构建检查通过" 