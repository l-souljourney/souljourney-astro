# 腾讯云 CNB 构建配置文件
# L-Souljourney 博客项目

# 通用配置锚点
.common_config: &common_config
  imports: https://cnb.cool/l-souljourney/env/-/blob/main/env.yml
  docker:
    image: node:18-alpine
    # 配置CNB数据卷缓存 - 使用CNB官方建议的明确路径命名（优化版）
    volumes:
      - /workspace/.cnb_cache/node_modules:/workspace/node_modules
      - /workspace/.cnb_cache/pnpm-store:/root/.local/share/pnpm/store
      - /workspace/.cnb_cache/pnpm-cache:/root/.cache/pnpm

# 通用构建步骤
.build_steps: &build_steps
  - echo "🔧 === 环境准备 ==="
  - node --version
  - echo "📦 === 配置pnpm ==="
  - npm install -g pnpm@latest
  - pnpm --version
  # 配置pnpm镜像源和缓存
  - pnpm config set registry https://mirrors.cloud.tencent.com/npm/
  - pnpm config set store-dir /root/.local/share/pnpm/store
  - pnpm config set cache-dir /root/.cache/pnpm
  - pnpm config set state-dir /root/.local/state/pnpm
  - pnpm config set prefer-offline true
  # 优化网络配置
  - pnpm config set network-timeout 120000
  - pnpm config set fetch-retries 3
  - pnpm config set network-concurrency 16
  - echo "🔍 === 缓存状态检查 ==="
  - echo "检查node_modules缓存："
  - ls -la /workspace/node_modules 2>/dev/null | head -3 || echo "❌ node_modules缓存不存在"
  - echo "检查pnpm store缓存："
  - ls -la /root/.local/share/pnpm/store 2>/dev/null | head -3 || echo "❌ pnpm store缓存不存在"
  - echo "检查pnpm cache缓存："
  - ls -la /root/.cache/pnpm 2>/dev/null | head -3 || echo "❌ pnpm cache缓存不存在"
  - echo "📦 === 安装依赖 ==="
  - echo "开始时间：$(date '+%H:%M:%S')"
  - pnpm install --frozen-lockfile --prefer-offline
  - echo "完成时间：$(date '+%H:%M:%S')"
  - echo "🏗️ === 构建项目 ==="
  - pnpm build

main:
  push:
    - <<: *common_config
      stages:
        - *build_steps
        - echo "✅ === 构建完成 ==="
        - echo "📁 === 构建产物检查 ==="
        - ls -la dist/ | head -10
        - echo "文件总数：$(find dist -type f | wc -l)"
        - echo "总大小：$(du -sh dist/)"
        - echo "🚀 === 开始部署到COS ==="
      plugins:
        - name: cnbcool/tencent-cos
          with:
            secret_id: ${COS_SECRET_ID}
            secret_key: ${COS_SECRET_KEY}
            bucket: ${COS_BUCKET}
            region: ${COS_REGION}
            src: dist/
            dest: /
            delete: true
        - name: cos-deploy-check
          stages:
            - echo "✅ === COS部署完成确认 ==="
            - echo "🌐 存储桶: ${COS_BUCKET}"
            - echo "📍 区域: ${COS_REGION}"
            - echo "📂 目标路径: /"
            - echo "🗑️ 删除旧文件: 是"
            - echo "🎉 COS部署成功！"
        - name: cnbcool/tencent-cdn
          if: ${CDN_DOMAIN}
          with:
            domain: ${CDN_DOMAIN}
            secret_id: ${COS_SECRET_ID}
            secret_key: ${COS_SECRET_KEY}
            type: directory
            path: /
        - name: cdn-refresh-check
          if: ${CDN_DOMAIN}
          stages:
            - echo "✅ === CDN刷新完成确认 ==="
            - echo "🌐 域名: ${CDN_DOMAIN}"
            - echo "📂 刷新路径: /"
            - echo "🔄 CDN缓存刷新成功！"
        - name: github-sync
          if: ${GITHUB_TOKEN}
          stages:
            - echo "📤 === 同步到GitHub ==="
            - apk add --no-cache git
            - git config --global user.name "CNB Deploy Bot"
            - git config --global user.email "noreply@cnb.cool"
            - git remote add github https://${GITHUB_TOKEN}@github.com/l-souljourney/souljourney-astro.git || git remote set-url github https://${GITHUB_TOKEN}@github.com/l-souljourney/souljourney-astro.git
            - git push github main --force
            - echo "✅ GitHub同步完成"

develop:
  push:
    - <<: *common_config
      stages:
        - *build_steps
        - echo "✅ === 开发测试完成 ==="

"**":
  pull_request:
    - <<: *common_config
      stages:
        - *build_steps
        - echo "✅ === PR检查完成 ==="


